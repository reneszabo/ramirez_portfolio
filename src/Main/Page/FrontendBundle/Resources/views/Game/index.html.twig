{% extends 'MainPageFrontendBundle:Default:base.html.twig' %}
{% block stylesheets %}
  {{ parent() }}
  <link href="/libs/animate.css/animate.css" rel="stylesheet" type="text/css"/>
  <style type="text/css">
    table td{
      font-size: 2em;
      text-align: center;
    }
    table{
      border-bottom: 1px solid #ddd;
    }
    #initialSpeed{
      width: 80px;
      text-align: center;
      margin-right: -15px;
    }
    .info{
      padding-left: 50px;
    }
    .h2{
      margin-bottom: 30px;
      line-height: 2.1;
      margin-top: 0;
    }
    .players-table{
      margin-top: 10px;
    }
    canvas:focus{
      background: red;
    }
  </style>
{% endblock stylesheets %}
{% block body %}
  {{ include('MainPageFrontendBundle:Default:header.html.twig') }}

  <section class="container">
    <legend class="text-center h2">The Game</legend>
    <div class="row">
      <div class= "col-md-6">
        <div class="text-center">
          <canvas id="canvas" width="500" height="500"></canvas>
        </div>
      </div>
      <div class= "col-md-6 info">
        {% if is_granted('IS_AUTHENTICATED_FULLY') %}
          <h3 class="text-center">
            Welcome {{  app.user.username }}
          </h3>
        {% endif %}
        <table class="table  table-condensed table-responsive">
          <tbody>
            <tr>
              <th>Level:</th>
              <td> <span id="level" class="wow level bounceIn">1</span></td>
            </tr>
            <tr>
              <th>Score:</th>
              <td> <span id="score" class="wow score bounceIn">0</span></td>
            </tr>
            <tr>
              <th>Speed:</th>
              <td><span id="speed" class="wow level bounceIn">0</span></td>
            </tr>
            <tr>
              <th>Initial Speed:</th>
              <td><input id="initialSpeed" type="number" min="0" max="200" value="0" /></td>
            </tr>
          </tbody>
        </table>
        <div class="text-center">

          {% if is_granted('IS_AUTHENTICATED_FULLY') %}
            <a class="btn btn-default" href="{{ path('logout') }}">Logout</a>
          {% else %}
            <a class="btn btn-info" href="{{ path('game_secure') }}"><i class="fa  fa-gamepad"></i> <strong>LogIn</strong> - and Share your Score </a>
          {% endif %}
          <div id="dataInfo" class="">
            {% if is_granted('IS_AUTHENTICATED_FULLY') %}
              {{ include('MainPageFrontendBundle:Game:players.html.twig', {form:form, players:players}) }}
            {% else %}
              {{ include('MainPageFrontendBundle:Game:players.html.twig', { players:players}) }}
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </section>

{% endblock body %}
{% block javascripts %}
  {{ parent() }}
  <script src="https://cdnjs.cloudflare.com/ajax/libs/wow/1.1.2/wow.min.js" type="text/javascript"></script>
  <script type="text/javascript">
    /* --- VARIABLES----------------------------------------------- ----------*/
    var speedInitial = 200;
    var level = 0;
    var canvas = null;
    var ctx = null;
    var w = null;
    var h = null;
    var game_loop = null;
    var cw = 10;
    var d = null;
    var currentMove = null;
    var food;
    var score = 0;
    var snake_array;
    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
      $(document).on('submit', '#scoreForm', function (e) {
        e.preventDefault();
        var url = $(this).attr("action");
        $.ajax({
          type: "POST",
          url: url, // Or your url generator like Routing.generate('discussion_create')
          data: $(this).serializeArray(),
          dataType: "html",
          success: function (msg) {
            $('#dataInfo').html('');
            $('#dataInfo').append(msg);
          }
        });
        return false;

      });
    {% endif %}



      $(document).on('change', '#initialSpeed', function () {
        if ($(this).val() * 1 > 200) {
          $(this).val(200);
        } else if ($(this).val() * 1 < 0) {
          $(this).val(0);
        }
        speedInitial = (200 - $(this).val() * 1);
        init();
      })
      function refleshScore() {
        $('#score').html(score);
        animateScore();
        checkLevel();
      }
      function animateScore() {
        var wow = new WOW(
                {
                  boxClass: 'score', // default
                  animateClass: 'animated', // default
                  offset: 0, // default
                  mobile: true, // default
                  live: true        // default
                }
        );
        wow.init();
      }
      function checkLevel() {
        if (score % 3 === 0) {
          level++;
          if (score != 0) {
            speed = Math.floor((speed * 0.90));
          }
          animateLevel();
          speedReflesh();
        }
        $('#speed').html((200 - speed) * 1);
        $('#level').html(level);
      }
      function animateLevel() {
        var wowLevel = new WOW(
                {
                  boxClass: 'level', // default
                }
        );
        wowLevel.init();
      }
      function speedReflesh() {
        stopGame();
        resumeGame();
      }
      function stopGame() {
        if (typeof game_loop !== undefined)
          clearInterval(game_loop);
      }
      function resumeGame() {
        game_loop = setInterval(paint, speed);
      }
      function init() {
        d = "right"; //default direction
        create_snake();
        create_food(); //now we can see the food particle
        //let's display the score

        score = 0;
        level = 0;
        speed = speedInitial;
        stopGame();
        paint();
        refleshScore();


      }
      function create_snake() {
        var length = 2; //length of the snake
        snake_array = []; //empty array to start with
        for (var i = length - 1; i >= 0; i--) {
          //this will create a horizontal snake starting from top left
          snake_array.push({x: i, y: 0});
        }
      }
      function create_food() {
        //This will create a cell with x/y between 0-44 because there are 45(450/10) positions across the rows and columns
        food = {
          x: Math.round(Math.random() * (w - cw) / cw),
          y: Math.round(Math.random() * (h - cw) / cw)
        };
      }
      //Let's paint the snake now
      function paint() {
        //To avoid the snake trail we need to paint the BG on every frame
        //Let's paint the canvas now
        ctx.fillStyle = "white";
        ctx.fillRect(0, 0, w, h);
        ctx.strokeStyle = "black";
        ctx.strokeRect(0, 0, w, h);
        //The movement code for the snake to come here.
        //The logic is simple: pop out the tail cell and place it in front of the head cell
        var nx = snake_array[0].x;
        var ny = snake_array[0].y;
        //these were the position of the head cell
        //we will increment it to get the new head position
        //Let's add proper direction based movement now
        if (currentMove === null) {
          currentMove = d;
        }
        if (currentMove !== d) {
          currentMove = d;
        }
        if (currentMove === "right") {
          nx++;
        } else if (currentMove === "left") {
          nx--;
        } else if (currentMove === "up") {
          ny--;
        } else if (currentMove === "down") {
          ny++;
        }
        //Let's add the game over clause now
        //this will restart the game if the snake hits the wall
        //Let's add the code for body collision
        //now if the head of the snake bumps into the body, the game will restart
        if (nx == -1 || nx == w / cw || ny == -1 || ny == h / cw || check_collision(nx, ny, snake_array)) {
          //restart game
    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
          $('#game_score').val(score);
          $('#scoreForm').submit();
    {% endif %}
          init();
          //Let's organize the code a bit now
          return;
        }
        //Let's write the code to make the snake eat the food
        //The logic is simple: if the new head position matches with that of the food, create a new head instead of moving the tail
        if (nx == food.x && ny == food.y) {
          var tail = {x: nx, y: ny};
          score++;
          refleshScore();
          //create new food
          create_food();
        } else {
          var tail = snake_array.pop(); //pops out the last cell
          tail.x = nx;
          tail.y = ny;
        } //the snake can now eat the food
        snake_array.unshift(tail); //puts back the tail as the first cell
        for (var i = 0; i < snake_array.length; i++) {
          var c = snake_array[i];
          //Let's paint 10px wide cells
          paint_cell(c.x, c.y);
        }
        ;
        //Let's paint the food
        paint_cell(food.x, food.y);
        //Let's paint the score
      }
      //Let's first create a generic function to paint cells
      function paint_cell(x, y) {
        ctx.fillStyle = "black";
        ctx.fillRect(x * cw, y * cw, cw, cw);
        ctx.strokeStyle = "red";
        ctx.strokeRect(x * cw, y * cw, cw, cw);
      }
      function check_collision(x, y, array) {
        //This function will check if the provided x/y coordinates exists in an array of cells or not
        for (var i = 0; i < array.length; i++) {
          if (array[i].x == x && array[i].y == y)
            return true;
        }
        return false;
      }
      $(document).keydown(function (event) {
        var key = event.which;
        //we will add another clause to prevent reverse gear
        if (key == "37" && currentMove != "right")
          d = "left";
        else if (key == "38" && currentMove != "down")
          d = "up";
        else if (key == "39" && currentMove != "left")
          d = "right";
        else if (key == "40" && currentMove != "up")
          d = "down";
      });
      $(document).ready(function () {
        canvas = $("#canvas")[0];
        ctx = canvas.getContext("2d");
        w = $("#canvas").width();
        h = $("#canvas").height();
        init();
      });
      /* --- Prevent Scroll with keyboard keys ------------------------------ */
      window.addEventListener("keydown", function (e) {
        // space and arrow keys
        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {
          e.preventDefault();
        }
      }, false);

  </script>

{% endblock javascripts %}