{% extends 'InstagramBundle:Default:base.html.twig' %}
{% block stylesheets %}
  <link href="/libs/jquery-ui/jquery-ui.min.css" rel="stylesheet" type="text/css"/>
  {{ parent() }}
  <style type="text/css">
    .navbar-brand{
      font-size: 200%;
    }
    .text-center img{
      display: inline-block;
    }
    #content > .row > div {
      padding-top: 16px;
      padding-bottom: 16px;
    }
    #instagram-feed {
      box-shadow: inset 1px 0 0 rgba(0,0,0,.05),inset -1px 0 0 rgba(0,0,0,.05);
      background: #e0e1e2 url("/img/noise-2.png");
      border: 1px solid rgba(0,0,0,.1);
      border-width: 0 1px;
      padding: 16px 32px;
    }
    .caption_text{
      word-wrap: break-word; 
    }
    #instagram-race{
      padding: 16px 32px;
    }
    .img-profile-ranking{
      padding-top: 15px;
      padding-left: 10px;
    }
    .item-for-image{
      width: 100%;
    }
    h3#instagram-waiting-to-show {
      margin: 0;
      margin-bottom: 15px;
    }
    body > nav.navbar{
      margin-bottom: 0;
    }
  </style>
{% endblock stylesheets %}
{% block body %}
  <nav class="navbar navbar-default">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#"><strong>#{{tagName}}</strong></a>
      </div>
      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
        <ul class="nav navbar-nav">
        </ul>
        <ul class="nav navbar-nav navbar-right">
          <li><a class="ajaxRanking" href="#ranking">Turn on Rankings</a></li>
          <li><a class="ajax" href="{{path('instagram_subscription',{'type':'tag','query': tagName})}}">Turn on Live</a></li>
        </ul>
      </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
  </nav>


  <div id="content" class="container-fluid">
    <div class="row">
      <div class="col-md-3">
        <div id="instagram-ranking" class="hidden">
          <legend>
            Ranking - Top 10
            <div class="pull-right">
              <button type="button" class="btn btn-default btn-xs" data-toggle="modal" data-target="#rank-search">
                <i class="fa fa-search"></i>
              </button>
            </div>
          </legend>
          <div id="instagram-ranking-countainer">
          </div>
        </div>
      </div>
      <div id="instagram-feed" class="col-md-6">
        <h3 id="instagram-waiting-to-show" class="text-center hidden">
          <span id="instagram-count" class="label label-info">+100</span>
        </h3>
        <div id="instagram-timeline">
          {% for tag in tags %}
            {% include 'InstagramBundle:Tag:media.html.twig' with {'tag':tag} %}
          {% endfor %}
        </div>

      </div>
      <div class="col-md-3">
        {#<div class="well">
                    ASIDE RIGHT
        </div>#}
      </div>
    </div>
  </div>
  <div class="hidden">
    {% include 'InstagramBundle:Tag:media.html.twig' %}
    {% include 'InstagramBundle:Tag:rank_card.html.twig' %}
    <div id="hide-list">

    </div>
  </div>

  <div id="rank-search" class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">Rank search</h4>
        </div>
        <div class="modal-body clearfix">
          {{ form_start(form) }}
          {{ form_rest(form) }}
          {{ form_end(form) }}
        </div>
      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->






{% endblock body %}
{% block javascripts %}
  {{ parent() }}
  <script src="/libs/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>
  <script src="http://autobahn.s3.amazonaws.com/js/autobahn.min.js"></script>
  <script type="text/javascript">
    var conn = null;
    var ranking = false;
    function pushLive() {
      if ($('#hide-list .item-for').length > 0) {
        $obj = $('#hide-list .item-for:first-child');
        $obj.hide();
        if (true) {
          $('#instagram-timeline').prepend($obj);
          $obj.slideDown('fast');
          $('#instagram-timeline .item-for:last-child').remove();
        }
        if ($('#hide-list .item-for').length > 0) {
          $('#instagram-waiting-to-show').removeClass('hidden');
          $('#instagram-count').html("+" + $('#hide-list .item-for').length);
        } else {
          $('#instagram-waiting-to-show').addClass('hidden');
        }
        if (ranking) {
          getRankUsers();
        }
      }
      setTimeout(pushLive, 2000);
    }
    function connectLiveFeed() {
    {#      conn = new ab.Session('ws://localhost:8080',#}
        conn = new ab.Session('ws://ramirez-portfolio.com:8080',
                function () {
                  conn.subscribe('tag_{{tagName}}', function (topic, data) {
                    // This is where you would add the new article to the DOM (beyond the scope of this tutorial)
                    data.title.data.forEach(function (element, index, array) {
                      var $obj = $('.item-for-' + element.id);
                      if ($obj.length == 0) {
                        var $objClone = $('#item-for-template').clone();
                        $objClone.attr('id', '');
                        $objClone.addClass('item-for-' + element.id);
                        $('#hide-list').append($objClone);
                        $objClone.find('.item-for-image').attr('src', element.images.thumbnail.url);
                        $objClone.find('.item-for-image-profile').attr('src', element.user.profile_picture);
                        var user = element.user.full_name + " (" + element.user.username + ")";
                        $objClone.find('.item-for-username').html(user);
                        $objClone.find('.item-for-date').attr('data-time', element.created_time);
                        var myObj = $.parseJSON('{"date_created":"' + element.created_time + '"}'),
                                myDate = new Date(1000 * myObj.date_created);
                        $objClone.find('.item-for-date').html(myDate.toLocaleString());
                        if (element.caption) {
                          $objClone.find('.item-for-caption').html('<span class="caption_text">' + element.caption.text + '</span>');
                        }

                      }
                    });
                  });
                },
                function () {
                  console.warn('WebSocket connection closed');
                },
                {'skipSubprotocolCheck': true}
        );

      }
      function closeLiveFeed() {
        conn.close();
        conn = null;
      }
      $(document).on('click', '.ajax', function (e) {
        e.preventDefault();
        if (conn === null) {
          $(this).html('Turn off Live <scpan class="label label-success">LIVE</span>');
          connectLiveFeed();
          var url = $(this).attr('href');
          $.ajax({
            url: url
          });

        } else {
          $(this).html('Turn on Live');
          closeLiveFeed();
        }
      });
      $(document).on('click', '.ajaxRanking', function (e) {
        e.preventDefault();
        if ($('#instagram-ranking').hasClass('hidden')) {
          $('#instagram-ranking').removeClass('hidden');
          ranking = true;
          $(this).html('Turn off Rankings <scpan class="label label-success">ON</span>');
        } else {
          $('#instagram-ranking').addClass('hidden');
          ranking = false;
          $(this).html('Turn on Rankings');
        }
      });


      $(function () {
        setTimeout(pushLive, 2000);
        $(".date.from").datepicker({
          defaultDate: "+1w",
          dateFormat: 'dd-mm-yy 00:00:00',
          onClose: function (selectedDate) {
            $(".date.to").datepicker("option", "minDate", selectedDate);
          }
        });
        $(".date.to").datepicker({
          defaultDate: "+1w",
          dateFormat: 'dd-mm-yy 23:59:59',
          onClose: function (selectedDate) {
            $("#from").datepicker("option", "maxDate", selectedDate);
          }
        });
      });

      $(document).on('submit', 'form[name=instagram_date_filter]', function (e) {
        e.preventDefault();
        getRankUsers();
        $('#rank-search').modal('hide');
      });
      function getRankUsers() {
        var d = $('form[name=instagram_date_filter]').serialize();
        if (($('#instagram_date_filter_created_time_start').val() == "") || ($('#instagram_date_filter_created_time_end').val() == "")) {
          $('#instagram-ranking-countainer').html('<span class="label label-warning">Please search for a date range</span>');
        } else {

          $.post(
                  $('form[name=instagram_date_filter]').attr('action'),
                  d,
                  function (data, textStatus, jqXHR) {
                    $('#instagram-ranking-countainer').html(data);
                  }
          );
        }
      }

  </script>
{% endblock javascripts %}




